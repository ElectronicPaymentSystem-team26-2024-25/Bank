version: "3.8"

services:
  # Reverse proxy (TLS termination + route to internal services)
  proxy:
    image: nginx:stable
    container_name: proxy
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./proxy/conf.d:/etc/nginx/conf.d:ro
      # mount certs generated by mkcert for the hostnames you use
      - ./certs:/etc/ssl/private:ro
    depends_on:
      - webshop-frontend
      - psp-frontend
      - bank-front
      - bank1
      - bank2
      - pcc
      - eureka
    networks:
      - payments-net

  # --- WebShop frontend (react, served by nginx after build) ---
  webshop-frontend:
    build:
      context: ./WebShop/WebShop/webshop-frontend
      dockerfile: Dockerfile.frontend
    container_name: webshop-frontend
    expose:
      - "80"
    environment:
      - VITE_API_BASE_URL=https://webshop-backend:8075   # example: internal service name
    networks:
      - payments-net

  # WebShop backend (Spring Boot)
  webshop-backend:
    build:
      context: ./WebShop/WebShop/webshop-backend
      dockerfile: Dockerfile.spring
    container_name: webshop-backend
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://webshop-db:5432/webshop_db
      - SPRING_DATASOURCE_USERNAME=webshop
      - SPRING_DATASOURCE_PASSWORD=webshop_pass
      - SERVER_PORT=8075
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - webshop-db
    expose:
      - "8075"
    networks:
      - payments-net

  # PSP frontend (angular)
  psp-frontend:
    build:
      context: ./PSP/PSP/psp-frontend
      dockerfile: Dockerfile.frontend
    container_name: psp-frontend
    expose:
      - "80"
    environment:
      - NG_APP_API=https://psp:8080
    networks:
      - payments-net

  # PSP backend (Spring)
  psp:
    build:
      context: ./PSP/PSP/psp
      dockerfile: Dockerfile.spring
    container_name: psp
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://psp-db:5432/PspDB
      - SPRING_DATASOURCE_USERNAME=psp
      - SPRING_DATASOURCE_PASSWORD=psp_pass
      - SERVER_PORT=8080
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - psp-db
      - eureka
    expose:
      - "8080"
    networks:
      - payments-net

  # Bank frontend (angular)
  bank-front:
    build:
      context: ./Bank/bank-front
      dockerfile: Dockerfile.frontend
    container_name: bank-front
    expose:
      - "80"
    environment:
      - NG_APP_API=https://bank1:8060
    networks:
      - payments-net

  # Bank instance 1
  bank1:
    build:
      context: ./Bank/BankSystem
      dockerfile: Dockerfile.spring
      args:
        - APP_PROP=application-bank1.properties
    container_name: bank1
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://bank1-db:5432/Bank1DB
      - SPRING_DATASOURCE_USERNAME=bank1
      - SPRING_DATASOURCE_PASSWORD=bank1_pass
      - SERVER_PORT=8060
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - bank1-db
      - eureka
    expose:
      - "8060"
    networks:
      - payments-net

  # Bank instance 2
  bank2:
    build:
      context: ./Bank/BankSystem
      dockerfile: Dockerfile.spring
      args:
        - APP_PROP=application-bank2.properties
    container_name: bank2
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://bank2-db:5432/Bank2DB
      - SPRING_DATASOURCE_USERNAME=bank2
      - SPRING_DATASOURCE_PASSWORD=bank2_pass
      - SERVER_PORT=8061
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - bank2-db
      - eureka
    expose:
      - "8061"
    networks:
      - payments-net

  # PCC (communicator between banks)
  pcc:
    build:
      context: ./Bank/PCC
      dockerfile: Dockerfile.spring
    container_name: pcc
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://pcc-db:5432/PCCDB
      - SPRING_DATASOURCE_USERNAME=pcc
      - SPRING_DATASOURCE_PASSWORD=pcc_pass
      - SERVER_PORT=9090
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - pcc-db
      - eureka
    expose:
      - "9090"
    networks:
      - payments-net

  # Eureka server (service registry / gateway)
  eureka:
    build:
      context: ./Eureka
      dockerfile: Dockerfile.spring
    container_name: eureka
    environment:
      - SERVER_PORT=8761
      - SPRING_DATASOURCE_URL=jdbc:postgresql://eureka-db:5432/eureka_db
      - SPRING_DATASOURCE_USERNAME=eureka
      - SPRING_DATASOURCE_PASSWORD=eureka_pass
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - eureka-db
    expose:
      - "8761"
    networks:
      - payments-net

  # --- Postgres DBs ---
  webshop-db:
    image: postgres:15
    container_name: webshop-db
    environment:
      - POSTGRES_DB=webshop_db
      - POSTGRES_USER=webshop
      - POSTGRES_PASSWORD=webshop_pass
    volumes:
      - webshop_db_data:/var/lib/postgresql/data
    networks:
      - payments-net

  psp-db:
    image: postgres:15
    container_name: psp-db
    environment:
      - POSTGRES_DB=PspDB
      - POSTGRES_USER=psp
      - POSTGRES_PASSWORD=psp_pass
    volumes:
      - psp_db_data:/var/lib/postgresql/data
    networks:
      - payments-net

  bank1-db:
    image: postgres:15
    container_name: bank1-db
    environment:
      - POSTGRES_DB=Bank1DB
      - POSTGRES_USER=bank1
      - POSTGRES_PASSWORD=bank1_pass
    volumes:
      - bank1_db_data:/var/lib/postgresql/data
    networks:
      - payments-net

  bank2-db:
    image: postgres:15
    container_name: bank2-db
    environment:
      - POSTGRES_DB=Bank2DB
      - POSTGRES_USER=bank2
      - POSTGRES_PASSWORD=bank2_pass
    volumes:
      - bank2_db_data:/var/lib/postgresql/data
    networks:
      - payments-net

  pcc-db:
    image: postgres:15
    container_name: pcc-db
    environment:
      - POSTGRES_DB=PCCDB
      - POSTGRES_USER=pcc
      - POSTGRES_PASSWORD=pcc_pass
    volumes:
      - pcc_db_data:/var/lib/postgresql/data
    networks:
      - payments-net

  eureka-db:
    image: postgres:15
    container_name: eureka-db
    environment:
      - POSTGRES_DB=eureka_db
      - POSTGRES_USER=eureka
      - POSTGRES_PASSWORD=eureka_pass
    volumes:
      - eureka_db_data:/var/lib/postgresql/data
    networks:
      - payments-net

volumes:
  webshop_db_data:
  psp_db_data:
  bank1_db_data:
  bank2_db_data:
  pcc_db_data:
  eureka_db_data:

networks:
  payments-net:
    driver: bridge
